@using Microsoft.AspNet.Identity
@model _20LHWebPortal.Models.HangoutsListViewModel

@{
    ViewBag.Title = "Upcoming Hangouts";
}


@Html.AntiForgeryToken()
<style>
    table {
        width: 100%;
        margin-bottom: 50px;
    }

    table, th, td {
        border: 1px solid black;
        border-collapse: collapse;
    }

    th, td {
        padding: 5px;
        text-align: left;
    }

    table#t01 tr:nth-child(even) {
        background-color: #eee;
    }

    table#t01 tr:nth-child(odd) {
        background-color: #fff;
    }

    table#t01 th {
        background-color: black;
        color: white;
    }
</style>


@*<table style="width:100%">
    <tr>
        <th>
            Host Name
        </th>
        <th>
            Name of event
        </th>
        <th>
            Description
        </th>
        <th>
            Date
        </th>
        <th>
            How many spots are left?
        </th>
        <th>
            Wanna join?
        </th>
        <th>
            Guest list
        </th>

    </tr>
    
    @foreach (var item in @Model.ListOfHangouts)
    {
        <tr>
            <td>
                @item.HostName Average Rating of
            @if (@item.HostAverageRating.Equals(double.NaN))
            {
                <b>
                    0
                </b>
            }
            else
            {
                <b>
                    @item.HostAverageRating
                </b>
            }
                </td>
            <td>@item.Name</td>
            <td>@item.Description</td>
            <td>@if (@item.Date.HasValue)
            { @String.Format("{0:dddd, MMMM d, yyyy}", item.Date)}
            @if (@item.StartTime.HasValue)
            { @item.StartTime.Value.ToString("h:mm tt")} @if (@item.EndTime.HasValue)
            { <p>to @item.EndTime.Value.ToString("h:mm tt")</p> }</td>
            
                       
            
            
            @if (@item.OpenSpots > 0)
            {
                <td>
                    There are @item.OpenSpots spots left.
                    @if (@item.GenderRatio)
                    {
                        <div>
                            @item.MaleOpenSpots Guy spot(s) & @item.FemaleOpenSpots Girl(s) remaning.
                        </div>
                    }                  
                </td>
                <td>
                    @if((@item.GenderRatio && @item.MaleOpenSpots > 0 && @Model.UserGender.Equals("male")) ||
                        (@item.GenderRatio && @item.FemaleOpenSpots > 0 && @Model.UserGender.Equals("female")) ||
                        (!@item.GenderRatio && @item.OpenSpots > 0))
                    {
                        @Html.ActionLink(
                        "RSVP",
                        "Join",
                        new { id = item.Id })
                    }
                    
                </td>
            }
            else
            {
                <td>
                    There aren't any open spots left. Please Waitlist.
                </td>
                <td>
                </td>
            }

            @if (item.AttendingList.Count() > 0)
            {
                <td>
                    <ol>
                        @foreach (var u in item.AttendingList)
                        {
                            <li>
                                @u.username
                            </li>
                        }
                    </ol>
                </td>
            }
            

            
    </tr>
    }
</table>*@



<div class="row">
    <div class="col-lg-12">
        @foreach (var item in @Model.ListOfHangouts)
        {
            @Html.Partial("_UpcomingHangoutPartial", item, new ViewDataDictionary(new {gender = Model.UserGender}))
        }
    </div>
</div>




<!--Edit Event Modal-->
<div id="edit-event-modal" class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" data-url="@Url.Action("Edit", "Hangout")">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="gridSystemModalLabel">Edit Event</h4>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12" id="edit-event-modal-content">

                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <div class="row">
                    <div class="col-lg-12">
                        <a href="#" class="button green" data-button-type="edit-event-save">
                            Save
                            <i class="fa fa-chevron-right text-color-light"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    $(document).on("click", "[data-button-type='edit-event']", function() {
        var eventId = $(this).attr("data-event-id");
        window.EditEvent(eventId);
    });

    $(document).on("click", "[data-button-type='edit-event-save']", function () {
        window.SaveEvent();
    });

    $(document).on("click", ".notification", function () {
        $(this).fadeOut(function() {
            $(this).remove();
        });
    });


    $(document).ready(function() {
        window.EditEvent = window.EditEvent || {};
        window.SaveEvent = window.SaveEvent || {};



        window.EditEvent = function (eventId) {
            var editEventModal = $("#edit-event-modal");
            var contentArea = $("#edit-event-modal-content");
            var editEventUrl = editEventModal.attr("data-url");
            var token = $("[name='__RequestVerificationToken']").val();

            //reset modal content
            contentArea.html("");

            $.ajax({
                type: "GET",
                url: editEventUrl,
                data: {
                    id: eventId,
                    __RequestVerificationToken : token
                }
            })
            .done(function (response) {
                contentArea.html(response);
            });
        }


        window.SaveEvent = function() {
            var editEventModal = $("#edit-event-modal");
            var form = editEventModal.find("form");

            $.ajax({
                type: "POST",
                url: form.attr("action"),
                data: form.serialize()
            }).done(function (data) {
                if (data.Errors && data.Errors.length > 0) {
                    for (var i = 0; i < data.Errors.length; i++) {
                        var notification = $("<div>");
                        notification.text(data.Errors[i]);

                        notification.addClass("notification animated bounce");
                        $("#notfications").append(notification);
                    }
                }
                else {
                    editEventModal.modal({ show: false });
                }





                
                //location.reload();

                console.log(data);
            });
        };
    });


</script>