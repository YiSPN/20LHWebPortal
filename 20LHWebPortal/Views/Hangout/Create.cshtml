@model _20LHWebPortal.Models.CreateHangoutViewModel


<h2>Create</h2>

<head>
    <meta charset="utf-8">
    <script src="~/Scripts/jquery-2.1.4.js"></script>
    <script src="~/Scripts/jquery-ui.js"></script>
    <link href="~/Content/jquery-ui.css" rel="stylesheet" />
    <link href="~/Content/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/jquery.timepicker.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.timepicker.min.js"></script>
    <script src="//maps.googleapis.com/maps/api/js?"></script>
    <script>

    jQuery(document).ready(function ($) {
        var dateToday = new Date();
        $("#datepicker").datepicker({
            minDate: dateToday
        });
        $("#timepicker").timepicker();
        $("#timepicker2").timepicker();

    });
    </script>
    <script type="text/javascript">
        (function () {
            "use strict";
            var geocoder = new google.maps.Geocoder();
            var address = "San Francisco, CA"; // FIXME: frontend get string from object model
            if (document.getElementById("map") && typeof google === "object") {
                var locations = [
                    ['<div class="map-info-box"><ul class="contact-info-list"><li><span><i class="fa fa-home fa-fw"></i></span> Mountain View</li><li><span><i class="fa fa-phone fa-fw"></i></span> (+1)</li></ul></div>', 37.3894, -122.0819, 8]
                ];
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 13,
                    center: new google.maps.LatLng(37.3894, -122.0819),
                    scrollwheel: false,
                    navigationControl: true,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                });
                var infowindow_original = new google.maps.InfoWindow({
                    content: '<b>' + 'redirect in 3 sec' + '</b>',
                    size: new google.maps.Size(150, 50)
                });
                var marker_original = new google.maps.Marker({
                    position: new google.maps.LatLng(37.3894, -122.0819),
                    map: map,
                    animation: google.maps.Animation.DROP,
                    title: 'mountain view'
                });
                google.maps.event.addListener(marker_original, 'click', function () {
                    infowindow_original.open(map, marker_original);
                });
                var delay = 3000;
                setTimeout(function () {
                    if (geocoder) {
                        geocoder.geocode({ 'address': address }, function (results, status) {
                            if (status == google.maps.GeocoderStatus.OK) {
                                if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
                                    map.setCenter(results[0].geometry.location);
                                    var infowindow = new google.maps.InfoWindow({
                                        content: '<b>' + address + '</b>',
                                        size: new google.maps.Size(150, 50)
                                    });
                                    var marker = new google.maps.Marker({
                                        position: results[0].geometry.location,
                                        map: map,
                                        animation: google.maps.Animation.DROP,
                                        title: address
                                    });
                                    google.maps.event.addListener(marker, 'click', function () {
                                        infowindow.open(map, marker);
                                    });
                                }
                            }
                            else {
                                alert(status);
                                debugger;
                            }
                        });
                    }
                }, delay);
            }
        }());
    </script>
</head>


@using (Html.BeginForm("Create", "Hangout", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Create a new hangout.</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Description, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Date, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Date, new { @class = "form-control", @id = "datepicker"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.StartTime, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.StartTime, new { @class = "form-control", @id = "timepicker"})
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.EndTime, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.EndTime, new { @class = "form-control", @id = "timepicker2" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Location, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Location, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <p><b>Gmaps API test</b></p>
        <div id="map"></div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(m => m.PartySize, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.PartySize, new { @class = "form-control" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(m => m.ContactInfo, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ContactInfo, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.GenderRatio, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.GenderRatio, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Create" />
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}










