#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _20LHWebPortal.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="20LHdb")]
	public partial class AspNetUsers_HangoutDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspNetUsers_Hangout(AspNetUsers_Hangout instance);
    partial void UpdateAspNetUsers_Hangout(AspNetUsers_Hangout instance);
    partial void DeleteAspNetUsers_Hangout(AspNetUsers_Hangout instance);
    #endregion
		
		public AspNetUsers_HangoutDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AspNetUsers_HangoutDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AspNetUsers_HangoutDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AspNetUsers_HangoutDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AspNetUsers_HangoutDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AspNetUsers_Hangout> AspNetUsers_Hangouts
		{
			get
			{
				return this.GetTable<AspNetUsers_Hangout>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers_Hangout")]
	public partial class AspNetUsers_Hangout : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AspNetUsers;
		
		private int _HangoutId;
		
		private bool _IsRSVPd;
		
		private bool _IsWaitlist;
		
		private bool _Showed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAspNetUsersChanging(string value);
    partial void OnAspNetUsersChanged();
    partial void OnHangoutIdChanging(int value);
    partial void OnHangoutIdChanged();
    partial void OnIsRSVPdChanging(bool value);
    partial void OnIsRSVPdChanged();
    partial void OnIsWaitlistChanging(bool value);
    partial void OnIsWaitlistChanged();
    partial void OnShowedChanging(bool value);
    partial void OnShowedChanged();
    #endregion
		
		public AspNetUsers_Hangout()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AspNetUsers", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AspNetUsers
		{
			get
			{
				return this._AspNetUsers;
			}
			set
			{
				if ((this._AspNetUsers != value))
				{
					this.OnAspNetUsersChanging(value);
					this.SendPropertyChanging();
					this._AspNetUsers = value;
					this.SendPropertyChanged("AspNetUsers");
					this.OnAspNetUsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HangoutId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HangoutId
		{
			get
			{
				return this._HangoutId;
			}
			set
			{
				if ((this._HangoutId != value))
				{
					this.OnHangoutIdChanging(value);
					this.SendPropertyChanging();
					this._HangoutId = value;
					this.SendPropertyChanged("HangoutId");
					this.OnHangoutIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRSVPd", DbType="Bit NOT NULL")]
		public bool IsRSVPd
		{
			get
			{
				return this._IsRSVPd;
			}
			set
			{
				if ((this._IsRSVPd != value))
				{
					this.OnIsRSVPdChanging(value);
					this.SendPropertyChanging();
					this._IsRSVPd = value;
					this.SendPropertyChanged("IsRSVPd");
					this.OnIsRSVPdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWaitlist", DbType="Bit NOT NULL")]
		public bool IsWaitlist
		{
			get
			{
				return this._IsWaitlist;
			}
			set
			{
				if ((this._IsWaitlist != value))
				{
					this.OnIsWaitlistChanging(value);
					this.SendPropertyChanging();
					this._IsWaitlist = value;
					this.SendPropertyChanged("IsWaitlist");
					this.OnIsWaitlistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Showed", DbType="Bit NOT NULL")]
		public bool Showed
		{
			get
			{
				return this._Showed;
			}
			set
			{
				if ((this._Showed != value))
				{
					this.OnShowedChanging(value);
					this.SendPropertyChanging();
					this._Showed = value;
					this.SendPropertyChanged("Showed");
					this.OnShowedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
